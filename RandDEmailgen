package com.Fee.Management.System.Fee.Management.System.randdpack;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Fee.Management.System.Fee.Management.System.Model.Invoice;
import com.Fee.Management.System.Fee.Management.System.Model.PaymentSchedule;
import com.Fee.Management.System.Fee.Management.System.Repo.Enrollmentrepo;
import com.Fee.Management.System.Fee.Management.System.Repo.Invoicerepo;
import com.Fee.Management.System.Fee.Management.System.Repo.PaymentScheduleRepository;

@RestController
@RequestMapping("/api/RandDEmailgen")
public class RandDEmailgen {

    @Value("${invoice.directory}")
    private String invoiceDirectory;
    
    private static final String INVOICE_DIRECTORY = "invoices/";
    @Autowired
    private Invoicerepo invoiceRepository;
    @Autowired
    private Enrollmentrepo enrollmentrepo;
    /**
     * Generates an invoice for a given Invoice ID.
     *
     * @param invoiceId the ID of the Invoice.
     * @return the file path of the generated invoice.
     * @throws IOException if there is an error creating the invoice file.
     */
    @GetMapping("/test/{id}")
    public String generateInvoice(@PathVariable("id") Long invoiceId) throws IOException {
        // Fetch the Invoice from the repository
        Invoice invoice = invoiceRepository.findById(invoiceId)
                .orElseThrow(() -> new IllegalArgumentException("Invalid Invoice ID: " + invoiceId));

        // Access the associated PaymentSchedule
        var paymentSchedule = invoice.getPaymentSchedule();

        // Create directory if it doesn't exist
        File dir = new File(INVOICE_DIRECTORY);
        if (!dir.exists()) {
            dir.mkdirs();
        }

        // Define invoice file name and path
        String invoiceFileName = INVOICE_DIRECTORY + "Invoice_" + invoice.getId() + ".pdf";
        File invoiceFile = new File(invoiceFileName);

        // Generate the PDF invoice
        try (PDDocument document = new PDDocument()) {
            PDPage page = new PDPage();
            document.addPage(page);

            PDPageContentStream contentStream = new PDPageContentStream(document, page);
            contentStream.setFont(PDType1Font.HELVETICA, 12);
            contentStream.beginText();
            contentStream.setLeading(14.5f);
            contentStream.newLineAtOffset(50, 700);

            // Add Invoice Details
            contentStream.showText("Invoice ID: " + invoice.getId());
            contentStream.newLine();
            contentStream.showText("--------------------------");
            contentStream.newLine();
            contentStream.showText("Payment Date: " + invoice.getPaymentDate());
            contentStream.newLine();
            contentStream.showText("Billed To: " );
            contentStream.newLine();
            contentStream.showText("Enrollment ID: " + invoice.getPaymentSchedule().getEnrollment().getId());
            contentStream.newLine();
            contentStream.showText("Student Name: " + invoice.getPaymentSchedule().getEnrollment().getStudent().getName());
            contentStream.newLine();
            contentStream.showText("Address: " + invoice.getPaymentSchedule().getEnrollment().getStudent().getAddress());
            contentStream.newLine();
            contentStream.showText("Course: " + invoice.getPaymentSchedule().getEnrollment().getCourse().getName());
            contentStream.newLine();
            contentStream.showText("Price: " + invoice.getPaymentSchedule().getAmount());
            
            
            
           
            double amount = invoice.getPaymentSchedule().getAmount();

         // Calculate CGST (6% of the amount)
         double cgst = amount * 0.06;
         // Calculate SGST (6% of the amount)
         double sgst = amount * 0.06;
         // Calculate the total amount (Amount + CGST + SGST)
         double totalAmount = amount + cgst + sgst;

         // Add CGST and SGST
         contentStream.newLine();
         contentStream.showText("CGST (6%): $" + cgst);
         contentStream.newLine();
         contentStream.showText("SGST (6%): $" + sgst);
         contentStream.newLine();
         
         contentStream.showText("Total Amount: $" + totalAmount);
           
         
         
           /* 
            
            contentStream.showText("Bank Details: " + invoice.getBankDetails());
            contentStream.newLine();
            contentStream.showText("CGST (6%): $" + invoice.getCGST());
            contentStream.newLine();
            contentStream.showText("SGST (6%): $" + invoice.getSGST());
            contentStream.newLine();
            contentStream.showText("Total Amount: $" + invoice.getTotal());
            
            */
         contentStream.newLine();
            contentStream.showText("Installment Number: " + invoice.getPaymentSchedule().getInstallmentNumber());
            contentStream.newLine();
            contentStream.showText("Due Date: " + invoice.getPaymentSchedule().getDueDate());
            contentStream.newLine();
            contentStream.showText("Amount: $" + invoice.getPaymentSchedule().getAmount());
            contentStream.newLine();
            contentStream.newLine();
            
            contentStream.showText(" #1 Shifa Arcade, 3rd Floor, Bharathi Nagar 1st Street,");
            contentStream.newLine();
            		contentStream.showText(" North Usman Road, T – Nagar,");
            		contentStream.newLine();
            		contentStream.showText("Chennai – 600 017.");
            		contentStream.newLine();
            		contentStream.showText("96001 14466.");
            		
            contentStream.newLine();
            contentStream.showText("--------------------------");
            contentStream.showText("Thank you for your payment!");
            contentStream.endText();
            contentStream.close();

            // Save the document
            document.save(invoiceFile);
        }

        return invoiceFileName;
    }
}
